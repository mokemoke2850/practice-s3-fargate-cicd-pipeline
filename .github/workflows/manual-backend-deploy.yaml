name: Manual Backend Deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  REPOSITORY_SIMULATION: github-actions-test-simulation
  REPOSITORY_BACKEND: github-actions-test
  ECS_CLUSTER: github-actions-test-cluster
  ECS_SERVICE: github-actions-test-service
  TASK_DIFINTION: ./aws/task-definition.json

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build And Push SIMULATION Container Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd simulation
          docker build -t $ECR_REGISTRY/${{ env.REPOSITORY_SIMULATION }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.REPOSITORY_SIMULATION }}:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/${{ env.REPOSITORY_SIMULATION }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Build And Push Backend Container Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend
          docker build -t $ECR_REGISTRY/${{ env.REPOSITORY_BACKEND }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.REPOSITORY_BACKEND }}:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/${{ env.REPOSITORY_BACKEND }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update ECS Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DIFINTION }}
          region: ${{ env.AWS_REGION }}
          container-definitions: |
            [
              {
                "name": "simulation-api",
                "image": "${{ env.REPOSITORY_SIMULATION }}:${{ env.GITHUB_SHA }}-simulation",
                ]
              },
              {
                "name": "backend-api",
                "image": "${{ env.REPOSITORY_BACKEND }}:${{ env.GITHUB_SHA }}-backend",
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ]

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
